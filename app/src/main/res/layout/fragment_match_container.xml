<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:app="http://schemas.android.com/apk/res-auto"
  xmlns:tools="http://schemas.android.com/tools"
  tools:context=".fragment.MatchContainerFragment">

  <data>
    <import type="team449.frc.scoutingappbase.databinding.Conversions" />
    <variable
      name="vm"
      type="team449.frc.scoutingappbase.model.MatchViewModel" />
    <variable
      name="handler"
      type="team449.frc.scoutingappbase.fragment.MatchContainerFragmentClickHandler" />
    <variable
      name="page"
      type="int" />
  </data>

  <LinearLayout
    style="@style/Background"
    android:orientation="vertical">

    <LinearLayout
      android:layout_width="match_parent"
      android:layout_height="wrap_content"
      android:orientation="horizontal" >

      <TextView
        style="@style/Text"
        android:text="@{vm.teamId.toString()}"/>
      <TextView
        style="@style/Text"
        android:text="@{vm.matchId.toString()}"/>
      <Button
        style="@style/Wrap"
        android:onClick="@{handler::sumbit}"
        android:text="sumbit" />
    </LinearLayout>

    <!--To make the overscroll ripple not get clipped by the header:
          Put this all in a constraint layout. Put the view pager first, constrain it to parent top and top of bottom nav
          Add enough paddingTop to clear the header
          Make custom ViewPager class that fixes onDraw to fake out padding so height calculations are accurate-->
    <androidx.viewpager.widget.ViewPager
      android:id="@+id/viewPager"
      android:layout_width="match_parent"
      android:layout_height="0dp"
      android:layout_weight="1"/>

    <LinearLayout
      android:layout_width="match_parent"
      android:layout_height="@dimen/bottomNavHeight"
      android:elevation="@dimen/bottomNavElev"
      android:background="@color/bottomNavColor"
      android:gravity="center_vertical"
      android:orientation="horizontal">

      <LinearLayout
        android:layout_height="wrap_content"
        android:layout_width="0dp"
        android:layout_weight="1"
        android:gravity="center_vertical"
        android:onClick="@{handler::prev}"
        android:visibility="@{Conversions.visibliltyByString(Conversions.prevPage(page))}">
        <ImageView
          style="@style/Wrap"
          android:src="@drawable/ic_prev"
          android:tint="@color/primaryLightColor"/>
        <TextView
          style="@style/Text"
          android:textColor="@color/primaryLightColor"
          android:text="@{Conversions.prevPage(page)}" />
      </LinearLayout>

      <com.google.android.material.tabs.TabLayout
        android:id="@+id/pageDots"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:tabBackground="@drawable/page_selector"
        app:tabGravity="center"
        app:tabIndicatorHeight="0dp"/>

      <LinearLayout
        android:layout_height="wrap_content"
        android:layout_width="0dp"
        android:layout_weight="1"
        android:gravity="center_vertical|end"
        android:onClick="@{handler::next}"
        android:visibility="@{Conversions.visibliltyByString(Conversions.nextPage(page))}">
        <TextView
          style="@style/Text"
          android:textColor="@color/secondaryLightColor"
          android:text="@{Conversions.nextPage(page)}" />
        <ImageView
          style="@style/Wrap"
          android:src="@drawable/ic_next"
          android:tint="@color/secondaryLightColor"/>
      </LinearLayout>
    </LinearLayout>

  </LinearLayout>
</layout>